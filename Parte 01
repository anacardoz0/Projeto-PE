/*             ----Parte 01----
~ Utilizando os conceitos de vetor, implemente um algoritmo que:

01- inclua até 1000 usuários;  ok
02- edite um usuário;  ok 
03- exclua um usuário; 
04- busque um usuário pelo email; ok
05- imprima todos os usuários cadastrados;  ok
06- faça backup dos usuários cadastrados; ok
07- faça restauração dos dados; ok

~ Dados do usuário:

Id (int) => preenchido automaticamente por números randômicos 
Nome completo (string)  
Email (string) => validação do campo: verificar se o caractere "@" aparece 
Sexo (string) => validação do campo: aceitar somente as palavras Feminino, Masculino e Não declarar 
Endereço (string)   
Altura (double) => validação do campo: aceitar valores entre 1 e 2 m.  
Vacina (tomou a vacina? boolean)  */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <conio.h>


int main(){
	
	char opcao;
	int i, b, id[1000], idBackup[1000];
	int opcdousuario;
	char nome[1000][30], email[1000][30], sexo[1000][15], endereco[1000][50];
	char nomeBackup[1000][30], emailBackup[1000][30], sexoBackup[1000][15], enderecoBackup[1000][50];
	double altura[1000], alturaBackup[1000];
	char vacina[1000], vacinaBackup[1000];
 
 /* ~~~ MENU ~~~*/
 
 while (opcao != '8'){
 	printf("----- BEM VINDO AO MENU OPCOES -----\n");
 	printf("[1] CADASTRAR USUARIOS\n");
 	printf("[2] EDITAR USUARIOS\n");
 	printf("[3] EXCLUIR USUARIOS\n");
 	printf("[4] BUSCAR USUARIO POR EMAIL\n");
 	printf("[5] IMPRIMIR TODOS OS USUARIOS CADASTRADOS\n");
 	printf("[6] BACKUP DOS USUARIOS CADASTRADOS\n");
 	printf("[7] RESTAURACAO DOS DADOS\n");
 	printf("[8] SAIR\n\n");
	printf("Escolha a opcao desejada: ");
 	scanf ("%c", &opcao);
 }
 
 switch (opcao) {
    case 1: //cadastar
        system("cls"); /* cls - é utilizado para "limpar" a tela*/
    fflush(stdin);
   
   //Id
	for (i = 0; i < 1000; i++)
  {
    id[i] = rand() % 1000;
  }
  
  //Nome Completo
    printf("Informe o nome ID-%d: ", id[i]);
    fgets(nome[i],30,stdin);
	
 //Email
	printf("Informe o email: ");
	fgets(email[i],30,stdin);
	
	printf("\n%s", email[i]);
		
  printf("%d", strchr(email[i], '@')==0);
		if(strchr(email[i], '@') == 0){
			printf("Email invalido\n");
			
			printf("Informe o email: ");
	 		fgets(email[i],50,stdin);
		
		}
		else{
			printf("Email valido\n");
		}	 
		 
  //Sexo
  
  printf("Inform o sexo (Feminino, Masculino e Não declarar):");
  fgets(sexo[i],15,stdin);
		
		if(strcmp(sexo[i], "Feminino") == 0 && strcmp(sexo[i], "Masculino") == 0 && strcmp(sexo[i], "Feminino") == 0){
			printf("Sexo invalido\n");
			
			printf("Informe o sexo (Feminino, Masculino e Não declarar):");
	 		fgets(sexo[i],15,stdin);
		}
		else{
			printf("Sexo valido");
		}
  
  //Endereco
  printf("Informe o endereco: ");
	fgets(endereco[i],30,stdin);
	
 //Altura
 
  printf("Informe a altura:");
	scanf("%lf", &altura[i]);
	 	
	printf("%.2lf", altura[i]);
	 	
	if(altura[i] > 1.00 && altura[i] < 2.00){
			printf("Valido\n"); 		
		 }
	 else{
		printf("Altura invalida\n");
		
		printf("Informe a altura:");
		scanf("%lf", &altura[i]);
		 }
 
 fflush(stdin);
 
 //Vacina
 printf("Ja tomou a vacina? 1(Sim)\n 0(Nao)\n");
 scanf("%c", &vacina[i]);


                    fflush(stdin);

                    printf("\n");
                }
        break;
    
        
    case 2: //editar
        system("cls");
        
        for(i=0; i<1000; i++){

                    printf("%s -- ID: %d\n", nome[i], id[i]);
                }
                printf("Qual usuario voce quer editar?\n");
                scanf("%d", &opcdousuario);
        break;
	
    case 3: //excluir
        system("cls");
        printf("Voce escolhe a opcao 3! \n");
        break;
	
    case 4: //buscar por email
	   void buscaremail(){
    int i,optiom;
    char email[30];
        do{
    printf("---- MENU DE BUSCA ----\n");
    printf("[1] BUSCAR PELO O EMAIL DO USUARIO");;
    printf("[2] SAIR DO MENU DE BUSCA\n");
    printf("Digite o numero da opcao desejada: \n");
    scanf("%d",&option);
    system("CLS");
      
	  switch(opica){
        case 1:
         printf("Digite o email do usuario: \n");
         scanf("%s",&email);
            for(i=0;i<1000;i++){
                if((strcmp (email, email[i]) == 0) {
                printf("_______________________\n");
                printf("Nome: %s\n",nome[i]);
                printf("Email: %s\n",email[i]);
                printf("Sexo: %s\n",sexo[i]);
                printf("endereco: %s\n",endereco[i]);
                printf("Altura: %.2lf\n",altura[i]);
                printf("Ja tomou a vacina: %s\n",vacina[i]);
                        }
                    }
                    break;
                case 2:
                    break;
            }
        }while(option!=2);
        system("CLS");
}

        break;
	
    case 5: //imprimir 
        system("cls"); /* cls - é utilizado para "limpar" a tela*/
        printf("~~~ CADASTRADOS ~~~\n");
        
        for(i=0; i<size; i++){

                    printf("\nUSUARIO %d\n", id[i]);
                    printf("\nNome: %s", nome[i]);
                    printf("Email: %s", email[i]);
                    printf("Sexo: %s", sexo[i]);
                    printf("Endereco: %s", endereco[i]);
                    printf("Altura: %.2lf\n", altura[i]);
                    printf("Ja tomou a vacina?: %c", vacina[i]);

                    printf("\n");
                }
        break;
	
    case 6: //backup
        system("cls");
            for(i=0; i<1000; i++){

                strcpy(idBackup, id);
                strcpy(nomeBackup, nome);
                strcpy(emailBackup, email);
                strcpy(sexoBackup, sexo);
                strcpy(enderecoBackup, endereco);
                strcpy(alturaBackup, altura);
                strcpy(vacinaBackup, vacina);
            }

            printf("\n!!!BACKUP REALIZADO!!!\n");
        break;
	
    case 7: //restaurar
        system("cls");
        printf("Qual usuario voce deseja restaurar?:\n");
            for(i=0; i<1000; i++){
                printf("\nID: %d || Nome: %s",email, id[i], nome[i]);
            }
            scanf("%d", &opcdousuario);
            fflush(stdin);

            strcpy(nome[opcdousuario], nomeBackup[userOpt]);
            strcpy(email[opcdousuario], emailBackup[userOpt]);
            strcpy(sexo[opcdousuario], sexoBackup[userOpt]);
            strcpy(endereco[opcdousuario], enderecoBackup[userOpt]);
            altura[opcdousuario] = alturaBackup[userOpt];
            vacina[opcdousuario] = vacinaBackup[userOpt];

            printf("\n!!!RESTAURACAO REALIZADA!!!\n");
        break;
	
    case 8: //encerrar programa 
        system("cls");
        printf("Voce pediu para SAIR, prencione qualquer tecla para continuar\n");
        break;
	
    default:
        printf("Opcao INVALIDA, escolha um opcao VALIDA\n");
        printf("Precione qualquer tecla para voltar ao menu\n");
        system("pause");
        
    }
